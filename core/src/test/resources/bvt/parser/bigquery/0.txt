WITH
  Items AS (
    SELECT STRUCT('blue' AS color, 'round' AS shape) AS info UNION ALL
    SELECT STRUCT('blue', 'square') UNION ALL
    SELECT STRUCT('red', 'round')
  )
SELECT * FROM Items;
--------------------
WITH Items AS (
		SELECT STRUCT('blue' AS color, 'round' AS shape) AS info
		UNION ALL
		SELECT STRUCT('blue', 'square')
		UNION ALL
		SELECT STRUCT('red', 'round')
	)
SELECT *
FROM Items;
------------------------------------------------------------------------------------------------------------------------
SELECT DATE_ADD(DATE '2008-12-25', INTERVAL 5 DAY) AS five_days_later;
--------------------
SELECT DATE_ADD(DATE '2008-12-25', INTERVAL 5 DAY) AS five_days_later;
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE mydataset.myclusteredtable
(
  customer_id STRING,
  transaction_amount NUMERIC
)
PARTITION BY DATE(_PARTITIONTIME)
CLUSTERED BY
  customer_id
OPTIONS (
  partition_expiration_days=3,
  description="a table clustered by customer_id"
)
--------------------
CREATE TABLE mydataset.myclusteredtable (
	customer_id STRING,
	transaction_amount NUMERIC
)
PARTITION BY (
	DATE(_PARTITIONTIME)
)
CLUSTERED BY (customer_id)
OPTIONS (
	'partition_expiration_days' = 3,
	'description' = "a table clustered by customer_id"
)
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `myproject.mydataset.mytable`
CLONE `myproject.mydataset.mytablesnapshot`
OPTIONS(
  expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL 365 DAY),
  friendly_name="my_table",
  description="A table that expires in 1 year",
  labels=[("org_unit", "development")]
)
--------------------
CREATE TABLE `myproject.mydataset.mytable`
CLONE `myproject.mydataset.mytablesnapshot`
OPTIONS (
	'expiration_timestamp' = TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL 365 DAY),
	'friendly_name' = "my_table",
	'description' = "A table that expires in 1 year",
	'labels' = [("org_unit", "development")]
)
------------------------------------------------------------------------------------------------------------------------
SELECT
  WITH DIFFERENTIAL_PRIVACY
    OPTIONS(epsilon=10, delta=.01, max_groups_contributed=2, privacy_unit_column=id)
    item,
    AVG(quantity, contribution_bounds_per_group => (0,100)) AS average_quantity
FROM professors
GROUP BY item;
--------------------
SELECT
	WITH DIFFERENTIAL_PRIVACY
	OPTIONS (epsilon = 10,delta = .01,max_groups_contributed = 2,privacy_unit_column = id)
	item, AVG(quantity, contribution_bounds_per_group => (0, 100)) AS average_quantity
FROM professors
GROUP BY item;